 {
     "metadata": {
         "connection_params": {
                "uri": "neo4j://localhost:7687",
                "user": "neo4j",
                "password": "volttron"
         }
     },

     # optional. should match what is used for corresponding driver config
     #"campus": "campus1",

     # optional. should match what is used for corresponding driver config
     "building": "ucsd",

     ######### Configuration to identify whole building power meter. This required for ILC.  ##################
     ######### SHOULD MATCH the device name used by driver so that topic names match. ###########
     ######### i.e. devices/<campus>/<building>/<building_power_meter> should be the topic prefix for the driver data

     #### Ways to be supported to identity power meter ####

     #### 1. Identify based on BRICK TAG ####

     # Optionally, a custom power meter topic name can be provided using the configuration "building_power_meter",
     # in this case power meter device and its points are identified using BRICK labels but configured
     # "building_power_meter" is
     # used to derive device topic name, devices/<campus>/<building>/<building_power_meter>

     ##### 2. When there is no power meter and agent is used to post data as powermeter - i.e. simulated power meter
     ##### specify both the "building_power_meter" and "building_power_point" attributes. In this case, config
     ##### generator will not do any validation of the device and generate ilc config with given names

     "building_power_meter": "custom_building_meter_topic",
     "building_power_point": "configured_fake_power_point",

     # metadata value to identify the specific points and hence its name in this setup
     # Should include all points used in control and criteria configs.
     "point_meta_map": {
        "power_meter": {
            "WholeBuildingPower": "ActivePowerSensor"
            },
        "vav": {
            "CoolingOutputPercent": "CoolingOutputPercent",
            "AirFlowSetPoint": "SupplyAirFlowSetpoint",
            "ZoneTemperature": "ZoneTemperature",
            "EffectiveZoneCoolingTemperatureSetPoint": "EffectiveAirTemperatureCoolingSetpoint",
            "OccupiedZoneCoolingTemperatureSetPoint":  ["OccupiedCoolingTemperatureSetpoint"],
            "OccupancyCommand": "OccupancyStatus"
            },
        "lighting": {
            "DimmingLevelOutput": "LuminanceCommand",
            "Power": "ActivePowerSensor"
        },
        "occupancy_detector":{
            "OccupancySensor": "OccupancySensor"
        }
     },

     # optional point default value if no point name can be found using metadata/tags a default value can be provided
     # useful in cases where we know point exists but tagging is incomplete.
     # keys for below dict should be subset of key in point_meta_map

     #"point_default_map": {
     #   "vav": {
     #     "ZoneCoolingTemperatureSetPoint" : "default_zone_cooling_temp_sp",
     #     "MinimumAirFlow": "default_minimum_airflow",
     #     "ZoneAirFlow": "default_zone_airflow",
     #     "MaxAirFlow": "default_maxairflow",
     #     "ZoneTemperature": "default_zntemp",
     #     "OccupancyCommand": "default_occ_cmd"
     #    },
     #  "power_meter": {
     #  },
     #  "lighting": {
     #      "DimmingLevelOutput" : "default_dim_level",
     #      "Power": "DefaultActivePowerSensor"
     #  }
     #},

     # The field that contains the above point metadata
     "point_meta_field": "Label",

     # Optional directory where all generated configs should go
     #"output_dir":"ilc_configs_from_config1",

     # Optional ilc agent's vip identity. defaults to platform.ilc
     # "ilc_agent_vip": "platform.ilc",

     "config_template": {

        # ###### Pairwise criteria #######
        # device type determines the pairwise criteria file used.
        # pairwise_criteria_<device_type>.json file from the data folder will be used for ILC
        # You can customize this json file for your needs. If you customize this json file, you could also
        # enable validation for this configuration file
        # Validation of pairwise_criteria uses ilc/utils/validate_pairwise.py

        "validate_pairwise_criteria": false,

        # ########### ilc config template ########
        "ilc_config":{
            "demand_limit": "TRIGGER",
            "simulation_running": false,
            "control_time": 20,
            "control_confirm": 5,
            "average_building_power_window": 15,
            "stagger_release": true,
            "stagger_off_time": false
        },

        # ######### control config template ########
        "control_config":{
            "vav": {
                "device_topic": "",
                "curtail_settings": {
                    "load": "0.5",
                    "control_method": "offset",
                    "offset": 2.0,
                    "minimum": 70.0,
                    "maximum": 76.0,
                    # only one curtail setting and one point per curtail setting?
                    "point": "OccupiedZoneCoolingTemperatureSetPoint"
                },
                "device_status": {
                    # More than one curtail possible?
                    "curtail": {
                        "device_status_args": ["CoolingOutputPercent", "OccupancyCommand"],
                        "condition": ["(CoolingOutputPercent>10) & (Eq(OccupancyCommand, 0))"]
                    }
                }
            },
            "lighting": {
                "device_topic": "",
                "device_status": {
                    "curtail": {
                        "condition": ["DimmingLevelOutput > 0.7"],
                        "device_status_args": ["DimmingLevelOutput"]
                    }
                },
                "curtail_settings": {
                    "point": "DimmingLevelOutput",
                    "value": 0.7,
                    "control_method": "value",
                    "load": {
                        "operation": "(DimmingLevelOutput-0.7)*1438.0",
                        "equation_args": ["DimmingLevelOutput"]
                    }
                }
            }
        },

        # ############ criteria config template #########
        "criteria_config":{
            "vav": {
                "room_type": {
                    "map_key": "Office",
                    "operation_type": "mapper",
                    "dict_name": "zone_type"
                },
                "available_zone_airflow_ratio": {
                        "operation_type": "formula",
                        "operation": "CoolingOutputPercent",
                        "minimum": 0.0,
                        "maximum": 10.0,
                        "operation_args": ["CoolingOutputPercent"]
                        },
                "box_size": {
                        "operation_type": "formula",
                        "operation": "AirFlowSetPoint*(100.0/CoolingOutputPercent)",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "operation_args": ["AirFlowSetPoint", "CoolingOutputPercent"]
                    },
                "zonetemperature_setpoint": {
                        "operation": "1/(ZoneTemperature - EffectiveZoneCoolingTemperatureSetPoint)",
                        "operation_type": "formula",
                        "operation_args": {
                            "always": [
                                "ZoneTemperature"
                            ],
                            "nc": [
                                "EffectiveZoneCoolingTemperatureSetPoint"
                            ],
                            "minimum": 0.0,
                            "maximum": 10.0
                        }
                }
            },
            "lighting": {
                "room_type": {
                    "map_key": "Conference Room",
                    "operation_type": "mapper",
                    "dict_name": "zone_type"
                },
                "lighting_level": {
                    "operation": "DimmingLevelOutput",
                    "operation_type": "formula",
                    "operation_args": ["DimmingLevelOutput"]
                },
                "rated_power": {
                    "operation": "Power*100/DimmingLevelOutput",
                    "operation_type": "formula",
                    "operation_args": ["Power", "DimmingLevelOutput"]
                }
            }
        },

        # ######### zone type configuration that is part of criteria config file#################
        "mapper_config":{
            "zone_type": {
                "Computer Lab": 2,
                "Conference Room": 1,
                "Directors office": 1,
                "Empty Office": 7,
                "Kitchen": 6,
                "Mechanical Room": 9,
                "Mixed": 4,
                "Office": 3
            }
        }
    }
 }
